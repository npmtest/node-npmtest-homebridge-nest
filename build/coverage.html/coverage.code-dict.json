{"/home/travis/build/npmtest/node-npmtest-homebridge-nest/test.js":"/* istanbul instrument in package npmtest_homebridge_nest */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-nest/lib.npmtest_homebridge_nest.js":"/* istanbul instrument in package npmtest_homebridge_nest */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_homebridge_nest = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_homebridge_nest = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-nest/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-homebridge-nest && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_homebridge_nest */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_homebridge_nest\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_homebridge_nest.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_homebridge_nest.rollup.js'] =\n            local.assetsDict['/assets.npmtest_homebridge_nest.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_homebridge_nest.__dirname +\n                    '/lib.npmtest_homebridge_nest.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-nest/node_modules/homebridge-nest/index.js":"var nest = require('unofficial-nest-api');\nvar NestConnection = require('./lib/nest-connection.js');\nvar inherits = require('util').inherits;\n\nvar Service, Characteristic, Accessory, uuid, Away;\nvar DeviceAccessory, ThermostatAccessory, ProtectAccessory, CamAccessory;\n\nmodule.exports = function (homebridge) {\n\tService = homebridge.hap.Service;\n\tCharacteristic = homebridge.hap.Characteristic;\n\tAccessory = homebridge.hap.Accessory;\n\tuuid = homebridge.hap.uuid;\n\n\t/**\n\t * Characteristic \"Away\"\n\t */\n\tAway = function () {\n\t\tCharacteristic.call(this, 'Away', 'D6D47D29-4639-4F44-B53C-D84015DAEBDB');\n\t\tthis.setProps({\n\t\t\tformat: Characteristic.Formats.BOOL,\n\t\t\tperms: [Characteristic.Perms.READ, Characteristic.Perms.WRITE, Characteristic.Perms.NOTIFY]\n\t\t});\n\t\tthis.value = this.getDefaultValue();\n\t};\n\tinherits(Away, Characteristic);\n\tAway.HOME = 0;\n\tAway.AWAY = 1;\n\n\tvar exportedTypes = {\n\t\tAccessory: Accessory,\n\t\tService: Service,\n\t\tCharacteristic: Characteristic,\n\t\tuuid: uuid,\n\t\tAway: Away\n\t};\n\n\tDeviceAccessory = require('./lib/nest-device-accessory.js')(exportedTypes);\n\tThermostatAccessory = require('./lib/nest-thermostat-accessory.js')(exportedTypes);\n\tProtectAccessory = require('./lib/nest-protect-accessory.js')(exportedTypes);\n\tCamAccessory = require('./lib/nest-cam-accessory.js')(exportedTypes);\n\n\tvar acc = NestThermostatAccessory.prototype;\n\tinherits(NestThermostatAccessory, Accessory);\n\tNestThermostatAccessory.prototype.parent = Accessory.prototype;\n\tfor (var mn in acc) {\n\t\tNestThermostatAccessory.prototype[mn] = acc[mn];\n\t}\n\n\thomebridge.registerPlatform(\"homebridge-nest\", \"Nest\", NestPlatform);\n};\n\nfunction NestPlatform(log, config) {\n\t// auth info\n\tthis.username = config[\"username\"];\n\tthis.password = config[\"password\"];\n\tthis.config = config;\n\n\tthis.log = log;\n\tthis.accessoryLookup = {};\n\tthis.accessoryLookupByStructureId = {};\n}\n\nvar setupConnection = function(config, log) {\n\treturn new Promise(function (resolve, reject) {\n\t\tvar token = config[\"token\"];\n\t\tvar clientId = config[\"clientId\"];\n\t\tvar clientSecret = config[\"clientSecret\"];\n\t\tvar code = config[\"code\"];\n\t\tvar authURL = clientId ? \"https://home.nest.com/login/oauth2?client_id=\" + clientId + \"&state=STATE\" : null;\n\n\t\tvar err;\n\t\tif (!token && !clientId && !clientSecret && !code) {\n\t\t\terr = \"You did not specify {'token'} or {'clientId','clientSecret','code'}, one set of which is required for the new API\";\n\t\t} else if (!token && clientId && clientSecret && !code) {\n\t\t\terr = \"You are missing the one-time-use 'code' param. Should be able to obtain from \" + authURL;\n\t\t} else if (!token && (!clientId || !clientSecret || !code)) {\n\t\t\terr = \"If you are going to use {'clientId','clientSecret','code'} then you must specify all three, otherwise use {'token'}\";\n\t\t}\n\t\tif (err) {\n\t\t\treject(new Error(err));\n\t\t\treturn;\n\t\t}\n\n\t\tvar conn = new NestConnection(token, log);\n\t\tif (token) {\n\t\t\tresolve(conn)\n\t\t} else {\n\t\t\tconn.auth(clientId, clientSecret, code)\n\t\t\t\t.then(function(token) {\n\t\t\t\t\tif (log) log.warn(\"CODE IS ONLY VALID ONCE! Update config to use {'token':'\" + token + \"'} instead.\");\n\t\t\t\t\tresolve(conn);\n\t\t\t\t})\n\t\t\t\t.catch(function(err){\n\t\t\t\t\treject(err);\n\t\t\t\t\tif (log) log.warn(\"Auth failed which likely means the code is no longer valid. Should be able to generate a new one at \" + authURL);\n\t\t\t\t});\n\t\t}\n\t});\n};\n\nNestPlatform.prototype = {\n\taccessories: function (callback) {\n\t\tthis.log(\"Fetching Nest devices.\");\n\n\t\tvar that = this;\n\n\t\tvar generateAccessories = function(data) {\n\t\t\tvar foundAccessories = [];\n\n\t\t\tvar loadDevices = function(DeviceType) {\n\t\t\t\tvar list = data.devices && data.devices[DeviceType.deviceGroup];\n\t\t\t\tfor (var deviceId in list) {\n\t\t\t\t\tif (list.hasOwnProperty(deviceId)) {\n\t\t\t\t\t\tvar device = list[deviceId];\n\t\t\t\t\t\tvar structureId = device['structure_id'];\n\t\t\t\t\t\tvar structure = data.structures[structureId];\n\t\t\t\t\t\tvar accessory = new DeviceType(this.conn, this.log, device, structure);\n\t\t\t\t\t\tthat.accessoryLookup[deviceId] = accessory;\n\t\t\t\t\t\tfoundAccessories.push(accessory);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this);\n\n\t\t\tloadDevices(ThermostatAccessory);\n\t\t\tloadDevices(ProtectAccessory);\n\t\t\tloadDevices(CamAccessory);\n\n\t\t\treturn foundAccessories;\n\t\t}.bind(this);\n\n\t\tvar updateAccessories = function(data, accList) {\n\t\t\taccList.map(function(acc) {\n\t\t\t\tvar device = data.devices[acc.deviceGroup][acc.deviceId];\n\t\t\t\tvar structureId = device['structure_id'];\n\t\t\t\tvar structure = data.structures[structureId];\n\t\t\t\tacc.updateData(device, structure);\n\t\t\t}.bind(this));\n\t\t};\n\n\t\tvar handleUpdates = function(data){\n\t\t\tupdateAccessories(data, that.accessoryLookup);\n\t\t};\n\t\tsetupConnection(this.config, this.log)\n\t\t\t.then(function(conn){\n\t\t\t\tthat.conn = conn;\n\t\t\t\treturn that.conn.open();\n\t\t\t})\n\t\t\t.then(function(){\n\t\t\t\treturn that.conn.subscribe(handleUpdates);\n\t\t\t})\n\t\t\t.then(function(data) {\n\t\t\t\tthat.accessoryLookup = generateAccessories(data);\n\t\t\t\tif (callback) {\n\t\t\t\t\tvar copy = that.accessoryLookup.map(function (a) { return a; });\n\t\t\t\t\tcallback(copy);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tthat.log.error(err);\n\t\t\t\tif (that.username && that.password) {\n\t\t\t\t\tthat.oldaccessories(callback);\n\t\t\t\t} else if (callback) {\n\t\t\t\t\tcallback([]);\n\t\t\t\t}\n\t\t\t});\n\t},\n\toldaccessories: function (callback) {\n\t\tthis.log.warn(\"Falling back to legacy API.\");\n\n\t\tvar that = this;\n\t\tvar foundAccessories = [];\n\n\t\tnest.login(this.username, this.password, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\tthat.log(\"There was a problem authenticating with Nest.\");\n\t\t\t} else {\n\t\t\t\tnest.fetchStatus(function (data) {\n\t\t\t\t\tfor (var deviceId in data.device) {\n\t\t\t\t\t\tif (data.device.hasOwnProperty(deviceId)) {\n\t\t\t\t\t\t\tvar device = data.device[deviceId];\n\t\t\t\t\t\t\t// it's a thermostat, adjust this to detect other accessories\n\t\t\t\t\t\t\tif (data.shared[deviceId].hasOwnProperty('current_temperature')) {\n\t\t\t\t\t\t\t\tvar initialData = data.shared[deviceId];\n\t\t\t\t\t\t\t\tvar structureId = data.link[deviceId]['structure'].replace('structure.', '');\n\t\t\t\t\t\t\t\tvar structure = data.structure[structureId];\n\t\t\t\t\t\t\t\tvar name = initialData.name;\n\t\t\t\t\t\t\t\tvar accessory = new NestThermostatAccessory(\n\t\t\t\t\t\t\t\t\tthat.log, name,\n\t\t\t\t\t\t\t\t\tdevice, deviceId, initialData,\n\t\t\t\t\t\t\t\t\tstructure, structureId);\n\t\t\t\t\t\t\t\tthat.accessoryLookup[deviceId] = accessory;\n\t\t\t\t\t\t\t\tthat.accessoryLookupByStructureId[structureId] = accessory;\n\t\t\t\t\t\t\t\tfoundAccessories.push(accessory);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction subscribe() {\n\t\t\t\t\t\tnest.subscribe(subscribeDone, ['device', 'shared', 'structure']);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction subscribeDone(id, data, type) {\n\t\t\t\t\t\t// data if set, is also stored here: nest.lastStatus.shared[thermostatID]\n\t\t\t\t\t\tif (id && type != undefined && data && (that.accessoryLookup[id] || that.accessoryLookupByStructureId[id])) {\n\t\t\t\t\t\t\tthat.log('Update to Device: ' + id + \" type: \" + type);\n\t\t\t\t\t\t\tvar accessory = that.accessoryLookup[id] || that.accessoryLookupByStructureId[id];\n\t\t\t\t\t\t\tif (accessory) {\n\t\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\t\tcase 'shared':\n\t\t\t\t\t\t\t\t\t\taccessory.updateData(data);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'device':\n\t\t\t\t\t\t\t\t\t\taccessory.device = data;\n\t\t\t\t\t\t\t\t\t\taccessory.updateData();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'structure':\n\t\t\t\t\t\t\t\t\t\taccessory.structure = data;\n\t\t\t\t\t\t\t\t\t\taccessory.updateData();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetTimeout(subscribe, 2000);\n\t\t\t\t\t}\n\n\t\t\t\t\tsubscribe();\n\t\t\t\t\tcallback(foundAccessories)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction NestThermostatAccessory(log, name, device, deviceId, initialData, structure, structureId) {\n\t// device info\n\tthis.name = name || (\"Nest\" + device.serial_number);\n\tthis.deviceId = deviceId;\n\tthis.log = log;\n\tthis.device = device;\n\n\tvar id = uuid.generate('nest.thermostat.' + deviceId);\n\tAccessory.call(this, this.name, id);\n\tthis.uuid_base = id;\n\n\tthis.currentData = initialData;\n\n\tthis.structureId = structureId;\n\tthis.structure = structure;\n\n\tthis.getService(Service.AccessoryInformation)\n\t\t.setCharacteristic(Characteristic.Manufacturer, \"Nest\")\n\t\t.setCharacteristic(Characteristic.Model, device.model_version)\n\t\t.setCharacteristic(Characteristic.SerialNumber, device.serial_number);\n\n\tthis.addService(Service.Thermostat, name);\n\n\tthis.getService(Service.Thermostat)\n\t\t.addCharacteristic(Away)\n\t\t.on('get', function (callback) {\n\t\t\tvar away = this.isAway();\n\t\t\tthis.log(\"Away for \" + this.name + \" is: \" + away);\n\t\t\tif (callback) callback(null, away);\n\t\t}.bind(this))\n\t\t.on('set', this.setAway.bind(this));\n\n\tthis.getService(Service.Thermostat)\n\t\t.getCharacteristic(Characteristic.TemperatureDisplayUnits)\n\t\t.on('get', function (callback) {\n\t\t\tvar units = this.getTemperatureUnits();\n\t\t\tvar unitsName = units == Characteristic.TemperatureDisplayUnits.FAHRENHEIT ? \"Fahrenheit\" : \"Celsius\";\n\t\t\tthis.log(\"Temperature unit for \" + this.name + \" is: \" + unitsName);\n\t\t\tif (callback) callback(null, units);\n\t\t}.bind(this));\n\n\tthis.getService(Service.Thermostat)\n\t\t.getCharacteristic(Characteristic.CurrentTemperature)\n\t\t.on('get', function (callback) {\n\t\t\tvar curTemp = this.getCurrentTemperature();\n\t\t\tthis.log(\"Current temperature for \" + this.name + \" is: \" + curTemp);\n\t\t\tif (callback) callback(null, curTemp);\n\t\t}.bind(this));\n\n\tthis.getService(Service.Thermostat)\n\t\t.getCharacteristic(Characteristic.CurrentHeatingCoolingState)\n\t\t.on('get', function (callback) {\n\t\t\tvar curHeatingCooling = this.getCurrentHeatingCooling();\n\t\t\tthis.log(\"Current heating for \" + this.name + \" is: \" + curHeatingCooling);\n\t\t\tif (callback) callback(null, curHeatingCooling);\n\t\t}.bind(this));\n\n\tthis.getService(Service.Thermostat)\n\t\t.getCharacteristic(Characteristic.CurrentRelativeHumidity)\n\t\t.on('get', function (callback) {\n\t\t\tvar curHumidity = this.getCurrentRelativeHumidity();\n\t\t\tthis.log(\"Current humidity for \" + this.name + \" is: \" + curHumidity);\n\t\t\tif (callback) callback(null, curHumidity);\n\t\t}.bind(this));\n\n\tthis.getService(Service.Thermostat)\n\t\t.getCharacteristic(Characteristic.TargetTemperature)\n\t\t.on('get', function (callback) {\n\t\t\tvar targetTemp = this.getTargetTemperature();\n\t\t\tthis.log(\"Target temperature for \" + this.name + \" is: \" + targetTemp);\n\t\t\tif (callback) callback(null, targetTemp);\n\t\t}.bind(this))\n\t\t.on('set', this.setTargetTemperature.bind(this));\n\n\tthis.getService(Service.Thermostat)\n\t\t.getCharacteristic(Characteristic.TargetHeatingCoolingState)\n\t\t.on('get', function (callback) {\n\t\t\tvar targetHeatingCooling = this.getTargetHeatingCooling();\n\t\t\tthis.log(\"Target heating for \" + this.name + \" is: \" + targetHeatingCooling);\n\t\t\tif (callback) callback(null, targetHeatingCooling);\n\t\t}.bind(this))\n\t\t.on('set', this.setTargetHeatingCooling.bind(this));\n\n\tthis.updateData(initialData);\n}\n\nNestThermostatAccessory.prototype.getServices = function () {\n\treturn this.services;\n};\n\nNestThermostatAccessory.prototype.updateData = function (data) {\n\tif (data != undefined) {\n\t\tthis.currentData = data;\n\t}\n\tvar thermostat = this.getService(Service.Thermostat);\n\tthermostat.getCharacteristic(Away).getValue();\n\tthermostat.getCharacteristic(Characteristic.TemperatureDisplayUnits).getValue();\n\tthermostat.getCharacteristic(Characteristic.CurrentTemperature).getValue();\n\tthermostat.getCharacteristic(Characteristic.CurrentHeatingCoolingState).getValue();\n\tthermostat.getCharacteristic(Characteristic.CurrentRelativeHumidity).getValue();\n\tthermostat.getCharacteristic(Characteristic.TargetHeatingCoolingState).getValue();\n\tthermostat.getCharacteristic(Characteristic.TargetTemperature).getValue();\n};\n\nNestThermostatAccessory.prototype.getCurrentHeatingCooling = function () {\n\tvar current = this.getCurrentTemperature();\n\tvar state = this.getTargetHeatingCooling();\n\n\tvar isRange = state == (Characteristic.CurrentHeatingCoolingState.HEAT | Characteristic.CurrentHeatingCoolingState.COOL);\n\tvar high = isRange ? this.currentData.target_temperature_high : this.currentData.target_temperature;\n\tvar low = isRange ? this.currentData.target_temperature_low : this.currentData.target_temperature;\n\n\t// Add threshold\n\tvar threshold = .2;\n\thigh += threshold;\n\tlow -= threshold;\n\n\tif ((state & Characteristic.CurrentHeatingCoolingState.COOL) && this.currentData.can_cool && high < current) {\n\t\treturn Characteristic.CurrentHeatingCoolingState.COOL;\n\t}\n\tif ((state & Characteristic.CurrentHeatingCoolingState.HEAT) && this.currentData.can_heat && low > current) {\n\t\treturn Characteristic.CurrentHeatingCoolingState.HEAT;\n\t}\n\treturn Characteristic.CurrentHeatingCoolingState.OFF;\n};\n\nNestThermostatAccessory.prototype.getTargetHeatingCooling = function () {\n\tswitch (this.currentData.target_temperature_type) {\n\t\tcase \"off\":\n\t\t\treturn Characteristic.CurrentHeatingCoolingState.OFF;\n\t\tcase \"heat\":\n\t\t\treturn Characteristic.CurrentHeatingCoolingState.HEAT;\n\t\tcase \"cool\":\n\t\t\treturn Characteristic.CurrentHeatingCoolingState.COOL;\n\t\tcase \"range\":\n\t\t\treturn Characteristic.CurrentHeatingCoolingState.HEAT | Characteristic.CurrentHeatingCoolingState.COOL;\n\t\tdefault:\n\t\t\treturn Characteristic.CurrentHeatingCoolingState.OFF;\n\t}\n};\n\nNestThermostatAccessory.prototype.isAway = function () {\n\treturn this.structure.away;\n};\n\nNestThermostatAccessory.prototype.getCurrentTemperature = function () {\n\treturn this.currentData.current_temperature;\n};\n\nNestThermostatAccessory.prototype.getCurrentRelativeHumidity = function () {\n\treturn this.device.current_humidity;\n};\n\nNestThermostatAccessory.prototype.getTargetTemperature = function () {\n\tswitch (this.getTargetHeatingCooling()) {\n\t\tcase Characteristic.CurrentHeatingCoolingState.HEAT | Characteristic.CurrentHeatingCoolingState.COOL:\n\t\t\t// Choose closest target as single target\n\t\t\tvar high = this.currentData.target_temperature_high;\n\t\t\tvar low = this.currentData.target_temperature_low;\n\t\t\tvar cur = this.currentData.current_temperature;\n\t\t\treturn Math.abs(high - cur) < Math.abs(cur - low) ? high : low;\n\t\tdefault:\n\t\t\treturn this.currentData.target_temperature;\n\t}\n};\n\nNestThermostatAccessory.prototype.getTemperatureUnits = function () {\n\tswitch (this.device.temperature_scale) {\n\t\tcase \"F\":\n\t\t\treturn Characteristic.TemperatureDisplayUnits.FAHRENHEIT;\n\t\tcase \"C\":\n\t\t\treturn Characteristic.TemperatureDisplayUnits.CELSIUS;\n\t\tdefault:\n\t\t\treturn Characteristic.TemperatureDisplayUnits.CELSIUS;\n\t}\n};\n\nNestThermostatAccessory.prototype.setTargetHeatingCooling = function (targetHeatingCooling, callback) {\n\tvar targetTemperatureType = null;\n\n\tswitch (targetHeatingCooling) {\n\t\tcase Characteristic.CurrentHeatingCoolingState.HEAT:\n\t\t\ttargetTemperatureType = 'heat';\n\t\t\tbreak;\n\t\tcase Characteristic.CurrentHeatingCoolingState.COOL:\n\t\t\ttargetTemperatureType = 'cool';\n\t\t\tbreak;\n\t\tcase Characteristic.CurrentHeatingCoolingState.HEAT | Characteristic.CurrentHeatingCoolingState.COOL:\n\t\t\ttargetTemperatureType = 'range';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttargetTemperatureType = 'off';\n\t\t\tbreak;\n\t}\n\n\tthis.log(\"Setting target heating cooling for \" + this.name + \" to: \" + targetTemperatureType);\n\tnest.setTargetTemperatureType(this.deviceId, targetTemperatureType);\n\n\tif (callback) callback(null, targetTemperatureType);\n};\n\nNestThermostatAccessory.prototype.setTargetTemperature = function (targetTemperature, callback) {\n\n\tswitch (this.getTargetHeatingCooling()) {\n\t\tcase Characteristic.CurrentHeatingCoolingState.HEAT | Characteristic.CurrentHeatingCoolingState.COOL:\n\t\t\t// Choose closest target as single target\n\t\t\tvar high = this.currentData.target_temperature_high;\n\t\t\tvar low = this.currentData.target_temperature_low;\n\t\t\tvar cur = this.currentData.current_temperature;\n\t\t\tvar isHighTemp = Math.abs(high - cur) < Math.abs(cur - low);\n\t\t\tif (isHighTemp) {\n\t\t\t\thigh = targetTemperature;\n\t\t\t} else {\n\t\t\t\tlow = targetTemperature;\n\t\t\t}\n\t\t\tthis.log(\"Setting \" + (isHighTemp ? \"high\" : \"low\") + \" target temperature for \" + this.name + \" to: \" + targetTemperature);\n\t\t\tnest.setTemperatureRange(this.deviceId, low, high);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthis.log(\"Setting target temperature for \" + this.name + \" to: \" + targetTemperature);\n\t\t\tnest.setTemperature(this.deviceId, targetTemperature);\n\t\t\tbreak;\n\t}\n\n\tif (callback) callback(null, targetTemperature);\n};\n\nNestThermostatAccessory.prototype.setAway = function (away, callback) {\n\tthis.log(\"Setting Away for \" + this.name + \" to: \" + away);\n\tnest.setAway(Boolean(away), this.structureId);\n\tif (callback) callback(null, away);\n}\n","/home/travis/build/npmtest/node-npmtest-homebridge-nest/node_modules/homebridge-nest/lib/nest-connection.js":"/**\n * Created by kraigm on 12/15/15.\n */\n\nvar Promise = require('bluebird');\nvar rp = require('request-promise');\nvar Firebase = require(\"firebase\");\n\n'use strict';\n\nmodule.exports = Connection;\n\nvar logPrefix = \"[NestFirebase] \";\n\nfunction Connection(token, log) {\n\tthis.token = token;\n\tthis.log = function(info) {\n\t\tlog(logPrefix + info);\n\t};\n\tthis.debug = function(info) {\n\t\tlog.debug(logPrefix + info);\n\t};\n\tthis.error = function(info) {\n\t\tlog.error(logPrefix + info);\n\t};\n}\n\nConnection.prototype.auth = function(clientId, clientSecret, code) {\n\treturn rp({\n\t\tmethod: 'POST',\n\t\turi: 'https://api.home.nest.com/oauth2/access_token',\n\t\tform: {\n\t\t\tclient_id: clientId,\n\t\t\tclient_secret: clientSecret,\n\t\t\tcode: code,\n\t\t\tgrant_type: \"authorization_code\"\n\t\t}\n\t})\n\t.then(function (parsedBody) {\n\t\tvar body = JSON.parse(parsedBody);\n\t\tthis.token = body.access_token;\n\t\treturn this.token;\n\t}.bind(this));\n};\n\nvar authAsync = function() {\n\treturn Promise.fromCallback(this.conn.authWithCustomToken.bind(this.conn, this.token));\n};\n\n// Create a callback which logs the current auth state\nvar authDataCallback = function(authData) {\n\tif (authData) {\n\t\tthis.debug(\"User \" + authData.uid + \" is logged in with \" + authData.provider);\n\t} else {\n\t\tthis.debug(\"User is logged out\");\n\t\treauthAsync.bind(this)();\n\t}\n};\n\nvar reauthAsync = function() {\n\t// If already reauthorizing, return existing\n\tif (this.authTask) return this.authTask;\n\n\tvar self = this;\n\n\t// Loop that continues until connection is successful\n\tvar reauthLoopAsync = function(err) {\n\t\tif (err) self.error(\"Reauthorizing error : \" + (err.stack || err.message || err));\n\t\tself.debug(\"Delaying next reauthorization attempt (5s)\");\n\t\treturn Promise.delay(5000)\n\t\t\t.then(function() {\n\t\t\t\t// Attempts to reauthorize Firebase connection\n\t\t\t\tself.log(\"Reauthorizing connection\");\n\t\t\t\treturn authAsync.call(self);\n\t\t\t})\n\t\t\t.catch(reauthLoopAsync);\n\t};\n\n\t// Create loop and clean up when complete\n\treturn self.authTask || (self.authTask = reauthLoopAsync()\n\t\t.finally(function() { self.authTask = null; }));\n};\n\nConnection.prototype.open = function() {\n\tif (!this.token) {\n\t\treturn Promise.reject(new Error(\"You must provide a token or auth before you can open a connection.\"));\n\t}\n\n\tthis.conn = new Firebase('wss://developer-api.nest.com', new Firebase.Context());\n\treturn authAsync.call(this)\n\t\t.then(function() {\n\t\t\t// Register the callback to be fired every time auth state changes\n\t\t\tthis.conn.onAuth(authDataCallback.bind(this));\n\t\t\treturn this;\n\t\t}.bind(this));\n};\n\nConnection.prototype.isOpen = function() {\n\treturn this.conn ? true : false;\n};\n\nConnection.prototype.subscribe = function(handler) {\n\tvar self = this;\n\treturn new Promise(function (resolve, reject) {\n\t\tif (!handler){\n\t\t\treject(new Error(\"You must specify a handler\"))\n\t\t} else {\n\t\t\tvar notify = resolve || handler;\n\t\t\tthis.conn.on('value', function (snapshot) {\n\t\t\t\tvar data = snapshot.val();\n\t\t\t\tif (data) {\n\t\t\t\t\tnotify(data);\n\t\t\t\t\tnotify = handler;\n\t\t\t\t} else {\n\t\t\t\t\tself.log(\"Disconnect Detected\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}.bind(this));\n};\n\nConnection.prototype.update = function(path, data) {\n\tvar child = this.conn.child(path);\n\treturn Promise.fromCallback(child.set.bind(child, data));\n};\n","/home/travis/build/npmtest/node-npmtest-homebridge-nest/node_modules/homebridge-nest/lib/nest-cam-accessory.js":"/**\n * Created by kraig on 3/11/16.\n */\n\nvar inherits = require('util').inherits;\nvar Service, Characteristic;\nvar NestDeviceAccessory = require('./nest-device-accessory')();\n\n'use strict';\n\nmodule.exports = function(exportedTypes) {\n    if (exportedTypes && !Service) {\n        Service = exportedTypes.Service;\n        Characteristic = exportedTypes.Characteristic;\n\n        var acc = NestCamAccessory.prototype;\n        inherits(NestCamAccessory, NestDeviceAccessory);\n        NestCamAccessory.prototype.parent = NestDeviceAccessory.prototype;\n        for (var mn in acc) {\n            NestCamAccessory.prototype[mn] = acc[mn];\n        }\n\n        NestCamAccessory.deviceType = 'cam';\n        NestCamAccessory.deviceGroup = 'cameras';\n        NestCamAccessory.prototype.deviceType = NestCamAccessory.deviceType;\n        NestCamAccessory.prototype.deviceGroup = NestCamAccessory.deviceGroup;\n    }\n    return NestCamAccessory;\n};\n\nfunction NestCamAccessory(conn, log, device, structure) {\n    NestDeviceAccessory.call(this, conn, log, device, structure);\n\n    var motionSvc = this.addService(Service.MotionSensor);\n    this.bindCharacteristic(motionSvc, Characteristic.MotionDetected, \"Motion\",\n        getMotionDetectionState.bind(this), null, formatMotionDetectionState.bind(this));\n\n    this.addAwayCharacteristic(motionSvc);\n\n    this.updateData();\n}\n\n\n// --- MotionDetectionState ---\n\nvar getMotionDetectionState = function() {\n    return this.device.last_event &&\n        this.device.last_event.has_motion &&\n        !this.device.last_event.end_time;\n};\n\nvar formatMotionDetectionState = function(val) {\n    if (val) {\n        return \"detected\";\n    } else {\n        return \"not detected\";\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-homebridge-nest/node_modules/homebridge-nest/lib/nest-device-accessory.js":"/**\n * Created by kraig on 3/11/16.\n */\n\nvar inherits = require('util').inherits;\nvar Promise = require('bluebird');\nvar Accessory, Service, Characteristic, Away, uuid;\n\n'use strict';\n\nmodule.exports = function(exportedTypes) {\n    if (exportedTypes && !Accessory) {\n        Accessory = exportedTypes.Accessory;\n        Service = exportedTypes.Service;\n        Characteristic = exportedTypes.Characteristic;\n        uuid = exportedTypes.uuid;\n        Away = exportedTypes.Away;\n\n        var acc = NestDeviceAccessory.prototype;\n        inherits(NestDeviceAccessory, Accessory);\n        NestDeviceAccessory.prototype.parent = Accessory.prototype;\n        for (var mn in acc) {\n            NestDeviceAccessory.prototype[mn] = acc[mn];\n        }\n    }\n    return NestDeviceAccessory;\n};\n\n// Base type for Nest devices\nfunction NestDeviceAccessory(conn, log, device, structure) {\n\n    // device info\n    this.conn = conn;\n    this.name = device.name_long || device.name;\n    this.deviceId = device.device_id;\n    this.log = log;\n    this.device = device;\n    this.structure = structure;\n    this.structureId = structure.structure_id;\n\n    var id = uuid.generate('nest.' + this.deviceType + '.' + this.deviceId);\n    Accessory.call(this, this.name, id);\n    this.uuid_base = id;\n\n    var infoSvc = this.getService(Service.AccessoryInformation)\n        .setCharacteristic(Characteristic.Model, \"Nest \" + this.deviceType)\n        .setCharacteristic(Characteristic.SerialNumber, \" \")\n        .setCharacteristic(Characteristic.Manufacturer, \"Nest\");\n\n    this.boundCharacteristics = [];\n\n    this.bindCharacteristic(infoSvc, Characteristic.SoftwareRevision, \"Software version\", function() {\n        return this.device.software_version;\n    });\n\n    this.updateData();\n}\n\nNestDeviceAccessory.prototype.getServices = function () {\n    return this.services;\n};\n\nNestDeviceAccessory.prototype.bindCharacteristic = function (service, characteristic, desc, getFunc, setFunc, format) {\n    var actual = service.getCharacteristic(characteristic)\n        .on('get', function (callback) {\n            var val = getFunc.bind(this)();\n            if (callback) callback(null, val);\n        }.bind(this))\n        .on('change', function (change) {\n            var disp = change.newValue;\n            if (format && disp != null) {\n                disp = format(disp);\n            }\n            this.log(desc + \" for \" + this.name + \" is: \" + disp);\n        }.bind(this));\n    if (setFunc) {\n        actual.on('set', setFunc.bind(this));\n    }\n    this.boundCharacteristics.push([service, characteristic]);\n};\n\nNestDeviceAccessory.prototype.updateData = function (device, structure) {\n    if (device) {\n        this.device = device;\n    }\n    if (structure) {\n        this.structure = structure;\n    }\n    this.boundCharacteristics.map(function (c) {\n        c[0].getCharacteristic(c[1]).getValue();\n    });\n};\n\nNestDeviceAccessory.prototype.getDevicePropertyPath = function(property) {\n    return 'devices/' + this.deviceGroup + '/' + this.deviceId + '/' + property;\n};\n\nNestDeviceAccessory.prototype.updateDevicePropertyAsync = function(property, value, propertyDescription, valueDescription) {\n    propertyDescription = propertyDescription || property;\n    valueDescription = valueDescription || value;\n    this.log(\"Setting \" + propertyDescription + \" for \" + this.name + \" to: \" + valueDescription);\n    return this.conn.update(this.getDevicePropertyPath(property), value)\n        .return(value);\n};\n\nNestDeviceAccessory.prototype.getStructurePropertyPath = function(property) {\n    return 'structures/' + this.structureId + '/' + property;\n};\n\nNestDeviceAccessory.prototype.isAway = function () {\n    switch (this.structure.away) {\n        case \"home\":\n            return Away.HOME;\n        case \"away\":\n        case \"auto-away\":\n            return Away.AWAY;\n        default:\n            return Away.HOME;\n    }\n};\n\nNestDeviceAccessory.prototype.isAutoAway = function () {\n    return this.structure.away == \"auto-away\";\n};\n\nNestDeviceAccessory.prototype.cancelAutoAway = function () {\n    return this.isAutoAway() ? this.setAway(false) : Promise.resolve();\n};\n\nNestDeviceAccessory.prototype.setAway = function (away, callback) {\n    var val = away ? 'away' : 'home';\n    this.log(\"Setting Away for \" + this.name + \" to: \" + val);\n    var promise = this.conn.update(this.getStructurePropertyPath(\"away\"), val);\n    return promise\n        .return(away)\n        .asCallback(callback);\n};\n\nNestDeviceAccessory.prototype.addAwayCharacteristic = function(service) {\n    service.addCharacteristic(Away);\n    this.bindCharacteristic(service, Away, \"Away\", this.isAway, this.setAway);\n};\n"}